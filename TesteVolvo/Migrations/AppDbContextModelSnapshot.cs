// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteVolvo.Data;

#nullable disable

namespace TesteVolvo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("TesteVolvo.Models.Caminhao", b =>
                {
                    b.Property<int>("IdCaminhao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModelo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCaminhao");

                    b.HasIndex("IdModelo");

                    b.ToTable("Caminhoes");
                });

            modelBuilder.Entity("TesteVolvo.Models.Modelo", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdModelo");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            IdModelo = 1,
                            Ativo = true,
                            Nome = "FH"
                        },
                        new
                        {
                            IdModelo = 2,
                            Ativo = true,
                            Nome = "FM"
                        });
                });

            modelBuilder.Entity("TesteVolvo.Models.Caminhao", b =>
                {
                    b.HasOne("TesteVolvo.Models.Modelo", "Modelo")
                        .WithMany("Caminhoes")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("TesteVolvo.Models.Modelo", b =>
                {
                    b.Navigation("Caminhoes");
                });
#pragma warning restore 612, 618
        }
    }
}
